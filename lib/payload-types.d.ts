/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

export interface Config {
  collections: {
    'product-variant': ProductVariant;
    product: Product;
    packaging: Packaging;
    productinspiration: Productinspiration;
    zone: Zone;
    'delivery-area': DeliveryArea;
    'delivery-type': DeliveryType;
    'delivery-method': DeliveryMethod;
    'unit-of-measure': UnitOfMeasure;
    tag: Tag;
    filter: Filter;
    'grouped-purpose': GroupedPurpose;
    grouping: Grouping;
    purpose: Purpose;
    category: Category;
    orderstatus: Orderstatus;
    address: Address;
    customer: Customer;
    user: User;
    media: Media;
    page: Page;
    cart: Cart;
    usp: Usp;
    order: Order;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  globals: {};
}
export interface ProductVariant {
  id: number;
  name: string;
  product: number | Product;
  packagingGroup: {
    packaging: number | Packaging;
    amount?: string | null;
    minAmount?: number | null;
    minIncrement?: number | null;
  };
  basePrice: number;
  isAvailableInAllZones?: boolean | null;
  zoneAvailabilities?:
    | {
        zones: (number | Zone)[];
        zonePrice: number;
        id?: string | null;
      }[]
    | null;
  vismaProducts?:
    | {
        deliveryArea: number | DeliveryArea;
        vismaProductId: string;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
export interface Product {
  id: number;
  coverImage: number | Media;
  imageGallery?:
    | {
        image: number | Media;
        caption?: string | null;
        id?: string | null;
      }[]
    | null;
  name: string;
  usp?: (number | null) | Usp;
  subtitle: string;
  shortDescription: string;
  productSummary: {
    root: {
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      type: string;
      version: number;
    };
    [k: string]: unknown;
  };
  productSummary_html?: string | null;
  checkList?:
    | {
        checkListItem: string;
        id?: string | null;
      }[]
    | null;
  longDescription: {
    root: {
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      type: string;
      version: number;
    };
    [k: string]: unknown;
  };
  longDescription_html?: string | null;
  weightInTonnesPerCubicMeter: number;
  tags?:
    | {
        tag: number | Tag;
        id?: string | null;
      }[]
    | null;
  category: number | Category;
  filters: (number | Filter)[];
  slug?: string | null;
  information?: {
    tabs?:
      | {
          tabTitle: string;
          tabContent: {
            root: {
              children: {
                type: string;
                version: number;
                [k: string]: unknown;
              }[];
              direction: ('ltr' | 'rtl') | null;
              format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
              indent: number;
              type: string;
              version: number;
            };
            [k: string]: unknown;
          };
          tabContent_html?: string | null;
          id?: string | null;
        }[]
      | null;
    alertBox?: string | null;
  };
  userGuide?: {
    root: {
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      type: string;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  userGuide_html?: string | null;
  updatedAt: string;
  createdAt: string;
}
export interface Media {
  id: number;
  altText: string;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  sizes?: {
    thumbnail?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    card?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    productCard?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    hero?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    productCover?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    productSquare?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    productCircular?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
  };
}
export interface Usp {
  id: number;
  name: string;
  updatedAt: string;
  createdAt: string;
}
export interface Tag {
  id: number;
  name: string;
  updatedAt: string;
  createdAt: string;
}
export interface Category {
  id: number;
  name: string;
  slug: string;
  description?: string | null;
  featuredImage?: number | Media | null;
  infoBlocks?:
    | {
        title?: string | null;
        description?: string | null;
        image?: number | Media | null;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
export interface Filter {
  id: number;
  name: string;
  updatedAt: string;
  createdAt: string;
}
export interface Packaging {
  id: number;
  name: string;
  deliveryType: number | DeliveryType;
  amountOptions: {
    amount: number;
    id?: string | null;
  }[];
  uom: number | UnitOfMeasure;
  updatedAt: string;
  createdAt: string;
}
export interface DeliveryType {
  id: number;
  name: 'Enkeltprodukt' | 'Loesvekt';
  deliveryMethods?: (number | DeliveryMethod)[] | null;
  updatedAt: string;
  createdAt: string;
}
export interface DeliveryMethod {
  id: number;
  name: string;
  description?: string | null;
  maximumLoad?:
    | {
        maximumLoad: number;
        uom: number | UnitOfMeasure;
        id?: string | null;
      }[]
    | null;
  formBlocks?: (TextAreaBlock | MultipleChoiceBlock)[] | null;
  isHomeDelivery?: boolean | null;
  updatedAt: string;
  createdAt: string;
}
export interface UnitOfMeasure {
  id: number;
  name: string;
  abbreviation: string;
  updatedAt: string;
  createdAt: string;
}
export interface TextAreaBlock {
  title: string;
  description?: string | null;
  placeholder?: string | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'text-area-block';
}
export interface MultipleChoiceBlock {
  icon?: string | null;
  title: string;
  description?: string | null;
  choices?:
    | {
        text: string;
        id?: string | null;
      }[]
    | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'multiple-choice-block';
}
export interface Zone {
  id: number;
  name: string;
  deliveryArea: number | DeliveryArea;
  deliveryMethodPrices?:
    | {
        deliveryMethod: number | DeliveryMethod;
        shippingPrice: number;
        id?: string | null;
      }[]
    | null;
  places: {
    zipCode: string;
    postalLocation: string;
    id?: string | null;
  }[];
  updatedAt: string;
  createdAt: string;
}
export interface DeliveryArea {
  id: number;
  name: string;
  vismaWarehouseId: string;
  vismaWarehouseName: string;
  productDeclarationArray?:
    | {
        product: number | Product;
        productDeclaration: {
          root: {
            children: {
              type: string;
              version: number;
              [k: string]: unknown;
            }[];
            direction: ('ltr' | 'rtl') | null;
            format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
            indent: number;
            type: string;
            version: number;
          };
          [k: string]: unknown;
        };
        productDeclaration_html?: string | null;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
export interface Productinspiration {
  id: number;
  title: string;
  image: number | Media;
  buttonLink?: string | null;
  updatedAt: string;
  createdAt: string;
}
export interface GroupedPurpose {
  id: number;
  grouping?: (number | null) | Grouping;
  purpose?: (number | null) | Purpose;
  recommendedDepth?: number | null;
  tags: (number | Tag)[];
  updatedAt: string;
  createdAt: string;
}
export interface Grouping {
  id: number;
  name: string;
  purpose: (number | Purpose)[];
  updatedAt: string;
  createdAt: string;
}
export interface Purpose {
  id: number;
  name: string;
  updatedAt: string;
  createdAt: string;
}
export interface Orderstatus {
  id: number;
  status: string;
  updatedAt: string;
  createdAt: string;
}
export interface Address {
  id: number;
  streetAddress: string;
  postalCode: number;
  city?: string | null;
  addressType?: ('Levering' | 'Faktura')[] | null;
  updatedAt: string;
  createdAt: string;
}
export interface Customer {
  id: number;
  givenName: string;
  surName: string;
  email: string;
  phone: string;
  address?: (number | Address)[] | null;
  vismaCustomerId?: string | null;
  customerType?: ('PrivatKunde' | 'Bedrift') | null;
  updatedAt: string;
  createdAt: string;
}
export interface User {
  id: number;
  givenName?: string | null;
  surName?: string | null;
  roles?: ('admin' | 'editor' | 'orderAdmin')[] | null;
  updatedAt: string;
  createdAt: string;
  email?: string | null;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  password: string | null;
}
export interface Page {
  id: number;
  pageTitle: string;
  slug?: string | null;
  layout?: (HeroBlock | ProductHeroBlock | OrderwizardAlertBlock | ProductInspirationGridBlock)[] | null;
  updatedAt: string;
  createdAt: string;
}
export interface HeroBlock {
  title: string;
  content: string;
  button?: string | null;
  buttonLink?: (number | null) | Page;
  image: number | Media;
  id?: string | null;
  blockName?: string | null;
  blockType: 'hero';
}
export interface ProductHeroBlock {
  title: string;
  productType?: ('40 liter' | '25 liter' | '18 liter' | '10 liter' | 'Bulk' | '') | null;
  image: number | Media;
  id?: string | null;
  blockName?: string | null;
  blockType: 'product-hero';
}
export interface OrderwizardAlertBlock {
  topText: string;
  buttonText?: string | null;
  buttonLink?: (number | null) | Page;
  displayOption?: ('card' | 'alert') | null;
  theme?: ('dark' | 'light') | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'orderwizard-alert';
}
export interface ProductInspirationGridBlock {
  title: string;
  products?: (number | Productinspiration)[] | null;
  columns?: ('1' | '2' | '3' | '4' | '5' | '6') | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'product-inspiration-grid';
}
export interface Cart {
  id: number;
  customer?: (number | null) | Customer;
  items?:
    | {
        productVariant: number | ProductVariant;
        quantity: number;
        zoneId?: number | null;
        shippingPrice?: number | null;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
export interface Order {
  id: number;
  orderId: string;
  netsPaymentId: string;
  paymentMethod?: string | null;
  paymentAmount?: number | null;
  customer?: (number | null) | Customer;
  status?: (number | null) | Orderstatus;
  deliveryDate?: string | null;
  zoneId?: number | null;
  requireManualAction?: boolean | null;
  manualActionType?: string | null;
  orderType?: ('Ordre' | 'Foresporsel') | null;
  deliveryArea?: (number | null) | DeliveryArea;
  caseHandler?: (number | null) | User;
  addresses?: (number | Address)[] | null;
  orderLines?:
    | {
        productVariant: number | ProductVariant;
        productName?: string | null;
        packaging: number | Packaging;
        quantity: number;
        unitOfMeasure?: string | null;
        deliveryType?: string | null;
        productPrice?: number | null;
        deliveryPrice?: number | null;
        id?: string | null;
      }[]
    | null;
  comments?:
    | {
        comment?: string | null;
        created?: string | null;
        updated?: string | null;
        user?: (number | null) | User;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
export interface PayloadPreference {
  id: number;
  user: {
    relationTo: 'user';
    value: number | User;
  };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
export interface PayloadMigration {
  id: number;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}


declare module 'payload' {
  export interface GeneratedTypes extends Config {}
}